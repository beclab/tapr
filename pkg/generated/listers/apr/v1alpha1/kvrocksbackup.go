// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "bytetrade.io/web3os/tapr/pkg/apis/apr/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KVRocksBackupLister helps list KVRocksBackups.
// All objects returned here must be treated as read-only.
type KVRocksBackupLister interface {
	// List lists all KVRocksBackups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KVRocksBackup, err error)
	// KVRocksBackups returns an object that can list and get KVRocksBackups.
	KVRocksBackups(namespace string) KVRocksBackupNamespaceLister
	KVRocksBackupListerExpansion
}

// kVRocksBackupLister implements the KVRocksBackupLister interface.
type kVRocksBackupLister struct {
	indexer cache.Indexer
}

// NewKVRocksBackupLister returns a new KVRocksBackupLister.
func NewKVRocksBackupLister(indexer cache.Indexer) KVRocksBackupLister {
	return &kVRocksBackupLister{indexer: indexer}
}

// List lists all KVRocksBackups in the indexer.
func (s *kVRocksBackupLister) List(selector labels.Selector) (ret []*v1alpha1.KVRocksBackup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KVRocksBackup))
	})
	return ret, err
}

// KVRocksBackups returns an object that can list and get KVRocksBackups.
func (s *kVRocksBackupLister) KVRocksBackups(namespace string) KVRocksBackupNamespaceLister {
	return kVRocksBackupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KVRocksBackupNamespaceLister helps list and get KVRocksBackups.
// All objects returned here must be treated as read-only.
type KVRocksBackupNamespaceLister interface {
	// List lists all KVRocksBackups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KVRocksBackup, err error)
	// Get retrieves the KVRocksBackup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KVRocksBackup, error)
	KVRocksBackupNamespaceListerExpansion
}

// kVRocksBackupNamespaceLister implements the KVRocksBackupNamespaceLister
// interface.
type kVRocksBackupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KVRocksBackups in the indexer for a given namespace.
func (s kVRocksBackupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KVRocksBackup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KVRocksBackup))
	})
	return ret, err
}

// Get retrieves the KVRocksBackup from the indexer for a given namespace and name.
func (s kVRocksBackupNamespaceLister) Get(name string) (*v1alpha1.KVRocksBackup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kvrocksbackup"), name)
	}
	return obj.(*v1alpha1.KVRocksBackup), nil
}

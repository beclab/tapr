// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "bytetrade.io/web3os/tapr/pkg/apis/apr/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MiddlewareRequestLister helps list MiddlewareRequests.
// All objects returned here must be treated as read-only.
type MiddlewareRequestLister interface {
	// List lists all MiddlewareRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MiddlewareRequest, err error)
	// MiddlewareRequests returns an object that can list and get MiddlewareRequests.
	MiddlewareRequests(namespace string) MiddlewareRequestNamespaceLister
	MiddlewareRequestListerExpansion
}

// middlewareRequestLister implements the MiddlewareRequestLister interface.
type middlewareRequestLister struct {
	indexer cache.Indexer
}

// NewMiddlewareRequestLister returns a new MiddlewareRequestLister.
func NewMiddlewareRequestLister(indexer cache.Indexer) MiddlewareRequestLister {
	return &middlewareRequestLister{indexer: indexer}
}

// List lists all MiddlewareRequests in the indexer.
func (s *middlewareRequestLister) List(selector labels.Selector) (ret []*v1alpha1.MiddlewareRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MiddlewareRequest))
	})
	return ret, err
}

// MiddlewareRequests returns an object that can list and get MiddlewareRequests.
func (s *middlewareRequestLister) MiddlewareRequests(namespace string) MiddlewareRequestNamespaceLister {
	return middlewareRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MiddlewareRequestNamespaceLister helps list and get MiddlewareRequests.
// All objects returned here must be treated as read-only.
type MiddlewareRequestNamespaceLister interface {
	// List lists all MiddlewareRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MiddlewareRequest, err error)
	// Get retrieves the MiddlewareRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MiddlewareRequest, error)
	MiddlewareRequestNamespaceListerExpansion
}

// middlewareRequestNamespaceLister implements the MiddlewareRequestNamespaceLister
// interface.
type middlewareRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MiddlewareRequests in the indexer for a given namespace.
func (s middlewareRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MiddlewareRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MiddlewareRequest))
	})
	return ret, err
}

// Get retrieves the MiddlewareRequest from the indexer for a given namespace and name.
func (s middlewareRequestNamespaceLister) Get(name string) (*v1alpha1.MiddlewareRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("middlewarerequest"), name)
	}
	return obj.(*v1alpha1.MiddlewareRequest), nil
}

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "bytetrade.io/web3os/tapr/pkg/apis/apr/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KVRocksRestoreLister helps list KVRocksRestores.
// All objects returned here must be treated as read-only.
type KVRocksRestoreLister interface {
	// List lists all KVRocksRestores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KVRocksRestore, err error)
	// KVRocksRestores returns an object that can list and get KVRocksRestores.
	KVRocksRestores(namespace string) KVRocksRestoreNamespaceLister
	KVRocksRestoreListerExpansion
}

// kVRocksRestoreLister implements the KVRocksRestoreLister interface.
type kVRocksRestoreLister struct {
	indexer cache.Indexer
}

// NewKVRocksRestoreLister returns a new KVRocksRestoreLister.
func NewKVRocksRestoreLister(indexer cache.Indexer) KVRocksRestoreLister {
	return &kVRocksRestoreLister{indexer: indexer}
}

// List lists all KVRocksRestores in the indexer.
func (s *kVRocksRestoreLister) List(selector labels.Selector) (ret []*v1alpha1.KVRocksRestore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KVRocksRestore))
	})
	return ret, err
}

// KVRocksRestores returns an object that can list and get KVRocksRestores.
func (s *kVRocksRestoreLister) KVRocksRestores(namespace string) KVRocksRestoreNamespaceLister {
	return kVRocksRestoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KVRocksRestoreNamespaceLister helps list and get KVRocksRestores.
// All objects returned here must be treated as read-only.
type KVRocksRestoreNamespaceLister interface {
	// List lists all KVRocksRestores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KVRocksRestore, err error)
	// Get retrieves the KVRocksRestore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KVRocksRestore, error)
	KVRocksRestoreNamespaceListerExpansion
}

// kVRocksRestoreNamespaceLister implements the KVRocksRestoreNamespaceLister
// interface.
type kVRocksRestoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KVRocksRestores in the indexer for a given namespace.
func (s kVRocksRestoreNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KVRocksRestore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KVRocksRestore))
	})
	return ret, err
}

// Get retrieves the KVRocksRestore from the indexer for a given namespace and name.
func (s kVRocksRestoreNamespaceLister) Get(name string) (*v1alpha1.KVRocksRestore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kvrocksrestore"), name)
	}
	return obj.(*v1alpha1.KVRocksRestore), nil
}
